docs:
- label: layout
  namespaces:
  - label: containers
    mixins:
    - label: container-center()
      description: Sets an element as a center block.
      parameters: [$width]
      code: body > section { @include container-center(); }
    - label: container-padded()
      description: Sets an element as a padded block
      parameters: [$padding]
      code: body > section { @include container-padded(); }
  - label: grids
    mixins:
    - label: row()
      description: Sets a block as a cell container.
    - label: cell-base()
      description: Adds commen cell styles.
      parameters: [$spacing]
    - label: cell-width()
      description: Adds cell dimension styles.
      parameters: [$colspan, $columnCount, $spacing]
    - label: cell()
      description: Sets an element as cell.
      code: >
        @import "mixin/default/layout";
        @import "mixin/layout";

        @media screen and (min-width: 400px) {
            .row {
                @include row();
                 {
                    @include cell(4);
                    &:last-child {
                        @include cell-width(8);
                    }
                }
            }
        }
      demo: >
        <div class="row">
            <p>I'm a cell.</p>
            <p>I'm another cell.</p>
        </div>

