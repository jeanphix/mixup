/*
    namespace: containers
    description: Base styles for containers.
*/
/*
    namespace: containers
    description: Sets an element as a center block.
    params:
        - $width
    code: body > section { @include container-center(); }
*/
/*
    namespace: containers
    description: Sets an element as a padded block.
    params:
        - $padding
    code: body > section { @include container-padded(); }
*/
/*
    namespace: grids
    description: Sets an element as a cell container.
*/
/*
    namespace: grids
    description: Adds common cell styles.
    params:
        - $spacing
*/
/*
    namespace: grids
    description: Adds cell dimension styles.
    params:
        - $colspan
        - $columnCount
        - $spacing
*/
/*
    namespace: grids
    description: Sets an element as cell.
    params:
        - $colspan
        - $columnCount
        - $spacing
    code: >
        @import "mixin/default/layout";
        @import "mixin/layout";
        @media screen and (min-width: 400px) {
            .row {
                @include row();
                 {
                    @include cell(4);
                    &:last-child {
                        @include cell-width(8);
                    }
                }
            }
        }
    demo: >
        <div class="row">
            <p>I'm a cell.</p>
            <p>I'm another cell.</p>
        </div>

*/
/*
    namespace: buttons
    description: Adds button common styles.
    params:
        - $padding
        - $color
        - $hoverColor
        - $borderColor
        - $radius
        - $shadow
*/
/*
    namespace: buttons
    description: Sets an element as a basic button.
    params:
        - $padding
        - $color
        - $hoverColor
        - $borderColor
        - $radius
        - $shadow
        - $background
    code: input[type=submit] { @include button(); }
    demo: >
        <p class="demo"><a href="#" class="button">I'm a link</a></p>
        <p class="demo"><input type="submit" value="I'm an input[type=submit]" class="button" /></p>
*/
/*
    namespace: buttons
    description: Sets an element as a button with gradient background.
    params:
        - $padding
        - $color
        - $hoverColor
        - $borderColor
        - $radius
        - $shadow
        - $startColor
        - $endColor
    code: input[type=submit] { @include button-gradient(); }
    demo: >
        <p class="demo"><a href="#" class="button-gradient">I'm a link</a></p>
        <p class="demo"><input type="submit" value="I'm an input[type=submit]" class="button-gradient" /></p>
*/
/*
    namespace: boxes
    description: Adds box common styles.
    params:
        - $padding
        - $radius
*/
/*
    namespace: boxes
    description: Adds box color styles.
    params:
        - $color
        - $borderColor
        - $background
*/
/*
    namespace: boxes
    description: Sets an element as a basic box.
    params:
        - $padding
        - $color
        - $borderColor
        - $radius
        - $background
    code: body > section > div { @include box(); }
*/
/*
    namespace: boxes
    description: Adds success colors to a box.
    params:
        - $color
        - $borderColor
        - $background
*/
/*
    namespace: boxes
    description: Adds error colors to a box.
    params:
        - $color
        - $borderColor
        - $errorBackground
*/
/*
    namespace: navigation
    description: Sets an element as an horizontal navigation block.
    params:
        - $color
        - $height
        - $currentBackgroundColor
        - $focusColor
        - $activeClass
*/
/*
    namespace: forms
    description: Adds form fields styles.
    params:
        - $width
        - $borderColor
        - $background
        - $radius
*/
/*
    namespace: forms
    description: Adds form styles.
    params:
        - $fieldWidth
        - $fieldBorderColor
        - $fieldBackground
        - $fieldRadius
        - $lineHeight
*/
.row > p {
  margin-top: 1em;
  margin-bottom: 1em;
  padding: 1em;
  -webkit-border-radius: 0.5em;
  -moz-border-radius: 0.5em;
  border-radius: 0.5em;
  color: inherit;
  border: 1px #cccccc solid;
  background: #f5f5f5; }
  .row > p > *:first-child {
    margin-top: 0; }
  .row > p > *:last-child {
    margin-bottom: 0; }

@media screen and (min-width: 400px) {
  .row {
    padding: 0;
    margin: 0 0 1em 0; }
    .row:after {
      clear: both;
      display: table;
      content: ""; }
    .row > p {
      display: block;
      float: left;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      -o-box-sizing: border-box;
      box-sizing: border-box;
      margin-right: 2%;
      margin-top: 0;
      margin-bottom: 0;
      width: 32%; }
      .row > p:last-child {
        margin-right: 0; }
      .row > p:last-child {
        width: 66%; } }
.mixin {
  margin-top: 1em;
  margin-bottom: 1em;
  padding: 1em;
  -webkit-border-radius: 0.5em;
  -moz-border-radius: 0.5em;
  border-radius: 0.5em;
  color: inherit;
  border: 1px #cccccc solid;
  background: #f5f5f5; }
  .mixin > *:first-child {
    margin-top: 0; }
  .mixin > *:last-child {
    margin-bottom: 0; }

.demo .button {
  display: inline-block;
  padding: 0.4em 1em;
  color: inherit;
  border: 1px #cccccc solid;
  -webkit-border-radius: 0.3em;
  -moz-border-radius: 0.3em;
  border-radius: 0.3em;
  -webkit-box-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  -moz-box-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  box-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  text-decoration: none;
  cursor: pointer;
  background: #fafafa; }
  .demo .button:hover {
    color: inherit; }
.demo .button-gradient {
  display: inline-block;
  padding: 0.4em 1em;
  color: inherit;
  border: 1px #cccccc solid;
  -webkit-border-radius: 0.3em;
  -moz-border-radius: 0.3em;
  border-radius: 0.3em;
  -webkit-box-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  -moz-box-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  box-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
  text-decoration: none;
  cursor: pointer;
  background-color: #f5f5f5;
  background-image: -moz-linear-gradient(top, white, #e6e6e6);
  background-image: -ms-linear-gradient(top, white, #e6e6e6);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(white), to(#e6e6e6));
  background-image: -webkit-linear-gradient(top, white, #e6e6e6);
  background-image: -o-linear-gradient(top, white, #e6e6e6);
  background-image: linear-gradient(top, white, #e6e6e6);
  background-repeat: repeat-x; }
  .demo .button-gradient:hover {
    color: inherit; }
