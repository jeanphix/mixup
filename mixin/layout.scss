@import "style";


//*
//    namespace: containers
//    description: Base styles for containers.
//*
@mixin container() {
    display: block;
}
//*
//    namespace: containers
//    description: Sets an element as a center block.
//    params:
//        - $width
//    code: body > section { @include container-center(); }
//*
@mixin container-center($width: $containerWidth) {
    @include container();
    width: $width;
    margin: 0 auto;
}
//*
//    namespace: containers
//    description: Sets an element as a padded block.
//    params:
//        - $padding
//    code: body > section { @include container-padded(); }
//*
@mixin container-padded($padding: $containerPadding) {
    @include container();
    width: auto;
    padding-left: $padding;
    padding-right: $padding;
}
//*
//    namespace: grids
//    description: Sets an element as a cell container.
//*
@mixin row() {
    padding: 0;
    margin-top: 1em;
    margin-bottom: 0;
    &:after {
        clear: both;
        display: table;
        content: "";
    }
}
//*
//    namespace: grids
//    description: Adds common cell styles.
//    params:
//        - $spacing
//*
@mixin cell-base(
    $spacing: 2%
) {
    display: block;
    float: left;
    @include box-sizing(border-box);
    margin-right: $spacing;
    margin-top: 0;
    margin-bottom: 0;
    &:last-child {
        margin-right: 0;
    }
}
//*
//    namespace: grids
//    description: Adds cell dimension styles.
//    params:
//        - $colspan
//        - $columnCount
//        - $spacing
//*
@mixin cell-width(
    $colspan: 1,
    $columnCount: $rowColumnCount,
    $spacing: 2%
) {
    width: floor((100% - ($columnCount - 1) * $spacing) / $columnCount * $colspan + ($colspan - 1) * $spacing);
}
//*
//    namespace: grids
//    description: Sets an element as cell.
//    params:
//        - $colspan
//        - $columnCount
//        - $spacing
//    code: >
//        @media screen and (min-width: 400px) {
//            .row {
//                @include row();
//                 {
//                    @include cell(4);
//                    &:last-child {
//                        @include cell-width(8);
//                    }
//                }
//            }
//        }
//    demo: >
//        <div class="row">
//            <p>I'm a cell.</p>
//            <p>I'm another cell.</p>
//        </div>
//
//*
@mixin cell(
    $colspan: 1,
    $columnCount: $rowColumnCount,
    $spacing: 2%
) {
    @include cell-base($spacing);
    @include cell-width($colspan, $columnCount, $spacing);
}
