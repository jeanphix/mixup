@import "style";


/*
    namespace: buttons
    description: Adds button common styles.
    params:
        - $padding
        - $color
        - $hoverColor
        - $borderColor
        - $radius
        - $shadow
*/
@mixin button-base(
    $padding: $buttonPadding,
    $color: $buttonColor,
    $hoverColor: $buttonHoverColor,
    $borderColor: $buttonBorderColor,
    $radius: $buttonRadius,
    $shadow: $buttonShadow
) {
    display: inline-block;
    padding: $padding;
    color: $buttonColor;
    @include border($borderColor);
    @include border-radius($radius);
    @include box-shadow($shadow);
    text-decoration: none;
    cursor: pointer;
    &:hover {
        color: $hoverColor;
    }
}
/*
    namespace: buttons
    description: Sets an element as a basic button.
    params:
        - $padding
        - $color
        - $hoverColor
        - $borderColor
        - $radius
        - $shadow
        - $background
    code: input[type=submit] { @include button(); }
    demo: >
        <p class="demo"><a href="#" class="button">I'm a link</a></p>
        <p class="demo"><input type="submit" value="I'm an input[type=submit]" class="button" /></p>
*/
@mixin button(
    $padding: $buttonPadding,
    $color: $buttonColor,
    $hoverColor: $buttonHoverColor,
    $borderColor: $buttonBorderColor,
    $radius: $buttonRadius,
    $shadow: $buttonShadow,
    $background: $buttonBackground
) {
    @include button-base(
        $padding,
        $color,
        $hoverColor,
        $borderColor,
        $radius,
        $shadow
    );
    background: $background;
}
/*
    namespace: buttons
    description: Sets an element as a button with gradient background.
    params:
        - $padding
        - $color
        - $hoverColor
        - $borderColor
        - $radius
        - $shadow
        - $startColor
        - $endColor
    code: input[type=submit] { @include button-gradient(); }
    demo: >
        <p class="demo"><a href="#" class="button-gradient">I'm a link</a></p>
        <p class="demo"><input type="submit" value="I'm an input[type=submit]" class="button-gradient" /></p>
*/
@mixin button-gradient(
    $padding: $buttonPadding,
    $color: $buttonColor,
    $hoverColor: $buttonHoverColor,
    $borderColor: $buttonBorderColor,
    $radius: $buttonRadius,
    $shadow: $buttonShadow,
    $startColor: $buttonStartColor,
    $endColor: $buttonEndColor
) {
    @include button-base(
        $padding,
        $color,
        $hoverColor,
        $borderColor,
        $radius,
        $shadow
    );
    @include gradient-vertical($startColor, $endColor);
}
/*
    namespace: boxes
    description: Adds box common styles.
    params:
        - $padding
        - $radius
*/
@mixin box-base(
    $padding: $boxPadding,
    $radius: $boxRadius
) {
    margin-top: 1em;
    margin-bottom: 1em;
    padding: $padding;
    @include border-radius($radius);
    > *:first-child {
        margin-top: 0;
    }
    > *:last-child {
        margin-bottom: 0;
    }
}
/*
    namespace: boxes
    description: Adds box color styles.
    params:
        - $color
        - $borderColor
        - $background
*/
@mixin box-colors(
    $color: $boxColor,
    $borderColor: $boxBorderColor,
    $background: $boxBackground
) {
    color: $color;
    @include border($borderColor);
    background: $background;
}
/*
    namespace: boxes
    description: Sets an element as a basic box.
    params:
        - $padding
        - $color
        - $borderColor
        - $radius
        - $background
    code: body > section > div { @include box(); }
*/
@mixin box(
    $padding: $boxPadding,
    $color: $boxColor,
    $borderColor: $boxBorderColor,
    $radius: $boxRadius,
    $background: $boxBackground
) {
    @include box-base($padding, $radius);
    @include box-colors($color, $borderColor, $background);
}
@mixin box-colors-success(
    $color: $successColor,
    $borderColor: $successColor,
    $background: $successBackground
) {
    @include box-colors($color, $borderColor, $background);
}
@mixin box-colors-error(
    $color: $errorColor,
    $borderColor: $errorColor,
    $background: $errorBackground
) {
    @include box-colors($color, $borderColor, $background);
}

// Navigation
@mixin navigation-horizontal(
    $color: $navigationColor,
    $height: $navigationHorizontalHeight,
    $currentBackgroundColor: $navigationCurrentBackgroundColor,
    $focusColor: $navigationFocusColor,
    $activeClass: 'current'
) {
    display: block;
    line-height: $height;
    * {
        display: inline-block;
        margin-top: 0;
        margin-bottom: 0;
    }
    a {
        height: $height;
        padding: 0 0.5em;
        text-decoration: none;
        color: $color;
        &:visited {
            color: $color;
        }
        &:hover,
        &:focus,
        &:active {
            outline: none;
            color: $focusColor;
        }
    }
    .#{$activeClass} {
        background: $currentBackgroundColor;
        &, &:visited {
            color: $focusColor;
        }
    }
}

// Form
@mixin fields (
    $width: $formFieldWidth,
    $borderColor: $formFieldBorderColor,
    $background: $formFieldBackground,
    $radius: $formFieldRadius
) {
    input,
    textarea,
    select {
        display: inline-block;
        @include box-sizing(border-box);
        width: $width;
        padding: 0.3em;
        @include border($borderColor);
        @include border-radius($radius);
        background: $background;
    }
    input[type=checkbox] {
        width: auto;
    }
}
@mixin form(
    $fieldWidth: $formFieldWidth,
    $fieldBorderColor: $formFieldBorderColor,
    $fieldBackground: $formFieldBackground,
    $fieldRadius: $formFieldRadius,
    $lineHeight: $formLineHeight
) {
    line-height: $lineHeight;
    fieldset {
        padding: 0;
        border: 0;
        @include fields(
            $fieldWidth,
            $fieldBorderColor,
            $fieldBackground,
            $fieldRadius
        );
    }
    input[type=submit] {
        @include button-gradient();
    }
}

